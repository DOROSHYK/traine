{"version":3,"sources":["js/route.js","js/router.js","js/app.js"],"names":["Route","name","htmlName","defaultRoute","constructor","e","console","error","prototype","undefined","default","isActiveRoute","hashedPath","replace","Router","routes","init","rootElem","document","getElementById","r","scope","window","addEventListener","hasChanged","location","hash","length","i","route","log","substr","goToRoute","url","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","innerHTML","responseText","open","send"],"mappings":";AAAA,aAEe,SAASA,EAAMC,EAAMC,EAAUC,GACtC,IACG,IAACF,IAASC,EACH,KAAA,kDAELE,KAAAA,YAAYH,EAAMC,EAAUC,GACnC,MAAOE,GACLC,QAAQC,MAAMF,IAItB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAAL,EAAMQ,UAAY,CACdP,UAAMQ,EACNP,cAAUO,EACVC,aAASD,EACTL,YAAa,SAAUH,EAAMC,EAAUC,GAC9BF,KAAAA,KAAOA,EACPC,KAAAA,SAAWA,EACXQ,KAAAA,QAAUP,GAEnBQ,cAAe,SAAUC,GACdA,OAAAA,EAAWC,QAAQ,IAAK,MAAQ,KAAKZ;;ACvBpD,aAEe,SAASa,EAAOC,GACvB,IACI,IAACA,EACK,KAAA,mCAELX,KAAAA,YAAYW,GACZC,KAAAA,OACP,MAAOX,GACLC,QAAQC,MAAMF,IAItB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAAS,EAAON,UAAY,CAGfJ,YAAa,SAAUW,GACdA,KAAAA,OAASA,EACTE,KAAAA,SAAWC,SAASC,eAAe,QAG5CH,KAAM,WACII,MAAAA,EAAI,KAAKL,QACd,SAASM,EAAOD,GACbE,OAAOC,iBAAiB,aAAc,SAAUlB,GAC5CgB,EAAMG,WAAWH,EAAOD,KAF/B,CAIE,KAAMA,GACJI,KAAAA,WAAW,KAAMJ,IAG1BI,WAAY,SAAUH,EAAOD,GACrBE,GAAAA,OAAOG,SAASC,KAAKC,OAAS,EACzB,IAAA,IAAIC,EAAI,EAAGD,EAASP,EAAEO,OAAQC,EAAID,EAAQC,IAAK,CAC5CC,IAAAA,EAAQT,EAAEQ,GACdtB,QAAQwB,IAAID,GACRA,EAAMlB,cAAcW,OAAOG,SAASC,KAAKK,OAAO,MAChDzB,QAAQwB,IAAID,EAAMlB,cAAcW,OAAOG,SAASC,KAAKK,OAAO,KAC5DV,EAAMW,UAAUH,EAAM3B,gBAIzB,IAAA,IAAI0B,EAAI,EAAGD,EAASP,EAAEO,OAAQC,EAAID,EAAQC,IAAK,CAC5CC,IAAAA,EAAQT,EAAEQ,GACXC,EAAMnB,SACLW,EAAMW,UAAUH,EAAM3B,YAMvC8B,UAAW,SAAU9B,GACf,IAASmB,EACFY,EACAC,EAFEb,EAUP,KATKY,EAAM,SAAW/B,GACjBgC,EAAQ,IAAIC,gBACVC,mBAAqB,WACC,IAApB,KAAKC,YAAoC,MAAhB,KAAKC,SAC9BjB,EAAMJ,SAASsB,UAAY,KAAKC,eAGxCN,EAAMO,KAAK,MAAOR,GAAK,GACvBC,EAAMQ;;AC9DlB,aAEA,IAAA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,gBAGI,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAC,WAEkB,IAAI5B,EAAJ,QAAW,CACtB,IAAId,EAAJ,QAAU,OAAQ,aAAa,GAC/B,IAAIA,EAAJ,QAAU,UAAW,qBAJ5B","file":"app.4feecf05.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\n\nexport default function Route(name, htmlName, defaultRoute) {\n    try {\n        if(!name || !htmlName) {\n            throw 'error: name and htmlName params are mandatories';\n        }\n        this.constructor(name, htmlName, defaultRoute);\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nRoute.prototype = {\n    name: undefined,\n    htmlName: undefined,\n    default: undefined,\n    constructor: function (name, htmlName, defaultRoute) {\n        this.name = name;\n        this.htmlName = htmlName;\n        this.default = defaultRoute;\n    },\n    isActiveRoute: function (hashedPath) {\n        return hashedPath.replace('#', '') === this.name; \n    }\n}","\"use strict\";\n\nexport default function Router(routes) {\n    try {\n        if (!routes) {\n            throw 'error: routes param is mandatory';\n        }\n        this.constructor(routes);\n        this.init();\n    } catch (e) {\n        console.error(e);   \n    }\n}\n\nRouter.prototype = {\n    // routes: undefined,\n    // rootElem: undefined,\n    constructor: function (routes) {\n        this.routes = routes;\n        this.rootElem = document.getElementById('app');\n    },\n\n    init: function () {\n        const r = this.routes;\n        (function(scope, r) { \n            window.addEventListener('hashchange', function (e) {\n                scope.hasChanged(scope, r);\n            });\n        })(this, r);\n        this.hasChanged(this, r);\n    },\n\n    hasChanged: function (scope, r) {\n        if (window.location.hash.length > 0) {\n            for (let i = 0, length = r.length; i < length; i++) {\n                let route = r[i];\n                console.log(route)\n                if (route.isActiveRoute(window.location.hash.substr(1))) {\n                    console.log(route.isActiveRoute(window.location.hash.substr(1)))\n                    scope.goToRoute(route.htmlName);\n                }\n            }\n        } else {\n            for (let i = 0, length = r.length; i < length; i++) {\n                let route = r[i];\n                if(route.default) {\n                    scope.goToRoute(route.htmlName);\n                }\n            }\n        }\n    },\n\n   goToRoute: function (htmlName) {\n        (function(scope) { \n            var url = 'views/' + htmlName,\n                xhttp = new XMLHttpRequest();\n            xhttp.onreadystatechange = function () {\n                if (this.readyState === 4 && this.status === 200) {\n                    scope.rootElem.innerHTML = this.responseText;\n                }\n            };\n            xhttp.open('GET', url, true);\n            xhttp.send();\n        })(this);\n    }\n};","\"use strict\";\n\nimport Route from './route.js';\nimport Router from './router.js';\n\n//export default\n    (function () {\n    function init() {\n        const router = new Router([\n            new Route('home', 'home.html', true),            \n            new Route('library', 'my-library.html')\n        ]);\n    }\n    init();\n}());"]}