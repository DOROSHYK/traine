{"version":3,"sources":["js/router.js"],"names":["Router","routes","constructor","init","e","console","error","prototype","rootElem","document","getElementById","r","scope","window","addEventListener","hasChanged","location","hash","length","i","route","log","isActiveRoute","substr","goToRoute","htmlName","default","url","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","innerHTML","responseText","open","send"],"mappings":"AAAA;;;;;;;AAEe,SAASA,MAAT,CAAgBC,MAAhB,EAAwB;AACnC,MAAI;AACA,QAAI,CAACA,MAAL,EAAa;AACT,YAAM,kCAAN;AACH;;AACD,SAAKC,WAAL,CAAiBD,MAAjB;AACA,SAAKE,IAAL;AACH,GAND,CAME,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ;;AAEDJ,MAAM,CAACO,SAAP,GAAmB;AACf;AACA;AACAL,EAAAA,WAAW,EAAE,UAAUD,MAAV,EAAkB;AAC3B,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKO,QAAL,GAAgBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAhB;AACH,GANc;AAQfP,EAAAA,IAAI,EAAE,YAAY;AACd,UAAMQ,CAAC,GAAG,KAAKV,MAAf;;AACA,KAAC,UAASW,KAAT,EAAgBD,CAAhB,EAAmB;AAChBE,MAAAA,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsC,UAAUV,CAAV,EAAa;AAC/CQ,QAAAA,KAAK,CAACG,UAAN,CAAiBH,KAAjB,EAAwBD,CAAxB;AACH,OAFD;AAGH,KAJD,EAIG,IAJH,EAISA,CAJT;;AAKA,SAAKI,UAAL,CAAgB,IAAhB,EAAsBJ,CAAtB;AACH,GAhBc;AAkBfI,EAAAA,UAAU,EAAE,UAAUH,KAAV,EAAiBD,CAAjB,EAAoB;AAC5B,QAAIE,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBC,MAArB,GAA8B,CAAlC,EAAqC;AACjC,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWD,MAAM,GAAGP,CAAC,CAACO,MAA3B,EAAmCC,CAAC,GAAGD,MAAvC,EAA+CC,CAAC,EAAhD,EAAoD;AAChD,YAAIC,KAAK,GAAGT,CAAC,CAACQ,CAAD,CAAb;AACAd,QAAAA,OAAO,CAACgB,GAAR,CAAYD,KAAZ;;AACA,YAAIA,KAAK,CAACE,aAAN,CAAoBT,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBM,MAArB,CAA4B,CAA5B,CAApB,CAAJ,EAAyD;AACrDlB,UAAAA,OAAO,CAACgB,GAAR,CAAYD,KAAK,CAACE,aAAN,CAAoBT,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBM,MAArB,CAA4B,CAA5B,CAApB,CAAZ;AACAX,UAAAA,KAAK,CAACY,SAAN,CAAgBJ,KAAK,CAACK,QAAtB;AACH;AACJ;AACJ,KATD,MASO;AACH,WAAK,IAAIN,CAAC,GAAG,CAAR,EAAWD,MAAM,GAAGP,CAAC,CAACO,MAA3B,EAAmCC,CAAC,GAAGD,MAAvC,EAA+CC,CAAC,EAAhD,EAAoD;AAChD,YAAIC,KAAK,GAAGT,CAAC,CAACQ,CAAD,CAAb;;AACA,YAAGC,KAAK,CAACM,OAAT,EAAkB;AACdd,UAAAA,KAAK,CAACY,SAAN,CAAgBJ,KAAK,CAACK,QAAtB;AACH;AACJ;AACJ;AACJ,GApCc;AAsChBD,EAAAA,SAAS,EAAE,UAAUC,QAAV,EAAoB;AAC1B,KAAC,UAASb,KAAT,EAAgB;AACb,UAAIe,GAAG,GAAG,WAAWF,QAArB;AAAA,UACIG,KAAK,GAAG,IAAIC,cAAJ,EADZ;;AAEAD,MAAAA,KAAK,CAACE,kBAAN,GAA2B,YAAY;AACnC,YAAI,KAAKC,UAAL,KAAoB,CAApB,IAAyB,KAAKC,MAAL,KAAgB,GAA7C,EAAkD;AAC9CpB,UAAAA,KAAK,CAACJ,QAAN,CAAeyB,SAAf,GAA2B,KAAKC,YAAhC;AACH;AACJ,OAJD;;AAKAN,MAAAA,KAAK,CAACO,IAAN,CAAW,KAAX,EAAkBR,GAAlB,EAAuB,IAAvB;AACAC,MAAAA,KAAK,CAACQ,IAAN;AACH,KAVD,EAUG,IAVH;AAWH;AAlDc,CAAnB","file":"router.4e4db399.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\r\n\r\nexport default function Router(routes) {\r\n    try {\r\n        if (!routes) {\r\n            throw 'error: routes param is mandatory';\r\n        }\r\n        this.constructor(routes);\r\n        this.init();\r\n    } catch (e) {\r\n        console.error(e);   \r\n    }\r\n}\r\n\r\nRouter.prototype = {\r\n    // routes: undefined,\r\n    // rootElem: undefined,\r\n    constructor: function (routes) {\r\n        this.routes = routes;\r\n        this.rootElem = document.getElementById('app');\r\n    },\r\n\r\n    init: function () {\r\n        const r = this.routes;\r\n        (function(scope, r) { \r\n            window.addEventListener('hashchange', function (e) {\r\n                scope.hasChanged(scope, r);\r\n            });\r\n        })(this, r);\r\n        this.hasChanged(this, r);\r\n    },\r\n\r\n    hasChanged: function (scope, r) {\r\n        if (window.location.hash.length > 0) {\r\n            for (let i = 0, length = r.length; i < length; i++) {\r\n                let route = r[i];\r\n                console.log(route)\r\n                if (route.isActiveRoute(window.location.hash.substr(1))) {\r\n                    console.log(route.isActiveRoute(window.location.hash.substr(1)))\r\n                    scope.goToRoute(route.htmlName);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0, length = r.length; i < length; i++) {\r\n                let route = r[i];\r\n                if(route.default) {\r\n                    scope.goToRoute(route.htmlName);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n   goToRoute: function (htmlName) {\r\n        (function(scope) { \r\n            var url = 'views/' + htmlName,\r\n                xhttp = new XMLHttpRequest();\r\n            xhttp.onreadystatechange = function () {\r\n                if (this.readyState === 4 && this.status === 200) {\r\n                    scope.rootElem.innerHTML = this.responseText;\r\n                }\r\n            };\r\n            xhttp.open('GET', url, true);\r\n            xhttp.send();\r\n        })(this);\r\n    }\r\n};"]}