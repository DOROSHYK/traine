{"version":3,"sources":["js/router.js"],"names":["Router","routes","constructor","init","e","console","error","prototype","rootElem","document","getElementById","r","scope","window","addEventListener","hasChanged","location","hash","length","i","route","log","isActiveRoute","substr","goToRoute","htmlName","default","url","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","innerHTML","responseText","open","send"],"mappings":";AAAA,aAEe,SAASA,EAAOC,GACvB,IACI,IAACA,EACK,KAAA,mCAELC,KAAAA,YAAYD,GACZE,KAAAA,OACP,MAAOC,GACLC,QAAQC,MAAMF,IAItB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAAJ,EAAOO,UAAY,CAGfL,YAAa,SAAUD,GACdA,KAAAA,OAASA,EACTO,KAAAA,SAAWC,SAASC,eAAe,QAG5CP,KAAM,WACIQ,MAAAA,EAAI,KAAKV,QACd,SAASW,EAAOD,GACbE,OAAOC,iBAAiB,aAAc,SAAUV,GAC5CQ,EAAMG,WAAWH,EAAOD,KAF/B,CAIE,KAAMA,GACJI,KAAAA,WAAW,KAAMJ,IAG1BI,WAAY,SAAUH,EAAOD,GACrBE,GAAAA,OAAOG,SAASC,KAAKC,OAAS,EACzB,IAAA,IAAIC,EAAI,EAAGD,EAASP,EAAEO,OAAQC,EAAID,EAAQC,IAAK,CAC5CC,IAAAA,EAAQT,EAAEQ,GACdd,QAAQgB,IAAID,GACRA,EAAME,cAAcT,OAAOG,SAASC,KAAKM,OAAO,MAChDlB,QAAQgB,IAAID,EAAME,cAAcT,OAAOG,SAASC,KAAKM,OAAO,KAC5DX,EAAMY,UAAUJ,EAAMK,gBAIzB,IAAA,IAAIN,EAAI,EAAGD,EAASP,EAAEO,OAAQC,EAAID,EAAQC,IAAK,CAC5CC,IAAAA,EAAQT,EAAEQ,GACXC,EAAMM,SACLd,EAAMY,UAAUJ,EAAMK,YAMvCD,UAAW,SAAUC,GACf,IAASb,EACFe,EACAC,EAFEhB,EAUP,KATKe,EAAM,SAAWF,GACjBG,EAAQ,IAAIC,gBACVC,mBAAqB,WACC,IAApB,KAAKC,YAAoC,MAAhB,KAAKC,SAC9BpB,EAAMJ,SAASyB,UAAY,KAAKC,eAGxCN,EAAMO,KAAK,MAAOR,GAAK,GACvBC,EAAMQ","file":"router.5d74cd60.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\n\nexport default function Router(routes) {\n    try {\n        if (!routes) {\n            throw 'error: routes param is mandatory';\n        }\n        this.constructor(routes);\n        this.init();\n    } catch (e) {\n        console.error(e);   \n    }\n}\n\nRouter.prototype = {\n    // routes: undefined,\n    // rootElem: undefined,\n    constructor: function (routes) {\n        this.routes = routes;\n        this.rootElem = document.getElementById('app');\n    },\n\n    init: function () {\n        const r = this.routes;\n        (function(scope, r) { \n            window.addEventListener('hashchange', function (e) {\n                scope.hasChanged(scope, r);\n            });\n        })(this, r);\n        this.hasChanged(this, r);\n    },\n\n    hasChanged: function (scope, r) {\n        if (window.location.hash.length > 0) {\n            for (let i = 0, length = r.length; i < length; i++) {\n                let route = r[i];\n                console.log(route)\n                if (route.isActiveRoute(window.location.hash.substr(1))) {\n                    console.log(route.isActiveRoute(window.location.hash.substr(1)))\n                    scope.goToRoute(route.htmlName);\n                }\n            }\n        } else {\n            for (let i = 0, length = r.length; i < length; i++) {\n                let route = r[i];\n                if(route.default) {\n                    scope.goToRoute(route.htmlName);\n                }\n            }\n        }\n    },\n\n   goToRoute: function (htmlName) {\n        (function(scope) { \n            var url = 'views/' + htmlName,\n                xhttp = new XMLHttpRequest();\n            xhttp.onreadystatechange = function () {\n                if (this.readyState === 4 && this.status === 200) {\n                    scope.rootElem.innerHTML = this.responseText;\n                }\n            };\n            xhttp.open('GET', url, true);\n            xhttp.send();\n        })(this);\n    }\n};"]}